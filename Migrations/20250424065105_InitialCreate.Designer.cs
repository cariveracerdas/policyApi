// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using policyApi;

#nullable disable

namespace policyApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250424065105_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("policyApi.Modelos.ClienteModel", b =>
                {
                    b.Property<string>("CedulaAsegurado")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CedulaAsegurado");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("policyApi.Modelos.CoberturaModel", b =>
                {
                    b.Property<int>("IdCobertura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCobertura"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCobertura");

                    b.ToTable("Coberturas");
                });

            modelBuilder.Entity("policyApi.Modelos.EstadoPolizaModel", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstado");

                    b.ToTable("EstadoPolizas");
                });

            modelBuilder.Entity("policyApi.Modelos.PolizaModel", b =>
                {
                    b.Property<int>("IdPoliza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPoliza"));

                    b.Property<string>("Aseguradora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CedulaAsegurado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClienteCedulaAsegurado")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CoberturaIdCobertura")
                        .HasColumnType("int");

                    b.Property<int>("EstadoPolizaIdEstado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInclusion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCobertura")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoPoliza")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPoliza")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoAsegurado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroPoliza")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Periodo")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Prima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoPolizaIdTipoPoliza")
                        .HasColumnType("int");

                    b.HasKey("IdPoliza");

                    b.HasIndex("ClienteCedulaAsegurado");

                    b.HasIndex("CoberturaIdCobertura");

                    b.HasIndex("EstadoPolizaIdEstado");

                    b.HasIndex("NumeroPoliza")
                        .IsUnique();

                    b.HasIndex("TipoPolizaIdTipoPoliza");

                    b.ToTable("Polizas");
                });

            modelBuilder.Entity("policyApi.Modelos.TipoPolizaModel", b =>
                {
                    b.Property<int>("IdTipoPoliza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoPoliza"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoPoliza");

                    b.ToTable("TipoPolizas");
                });

            modelBuilder.Entity("policyApi.Modelos.PolizaModel", b =>
                {
                    b.HasOne("policyApi.Modelos.ClienteModel", "Cliente")
                        .WithMany("Polizas")
                        .HasForeignKey("ClienteCedulaAsegurado");

                    b.HasOne("policyApi.Modelos.CoberturaModel", "Cobertura")
                        .WithMany("Polizas")
                        .HasForeignKey("CoberturaIdCobertura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("policyApi.Modelos.EstadoPolizaModel", "EstadoPoliza")
                        .WithMany("Polizas")
                        .HasForeignKey("EstadoPolizaIdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("policyApi.Modelos.TipoPolizaModel", "TipoPoliza")
                        .WithMany("Polizas")
                        .HasForeignKey("TipoPolizaIdTipoPoliza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Cobertura");

                    b.Navigation("EstadoPoliza");

                    b.Navigation("TipoPoliza");
                });

            modelBuilder.Entity("policyApi.Modelos.ClienteModel", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("policyApi.Modelos.CoberturaModel", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("policyApi.Modelos.EstadoPolizaModel", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("policyApi.Modelos.TipoPolizaModel", b =>
                {
                    b.Navigation("Polizas");
                });
#pragma warning restore 612, 618
        }
    }
}
